package extensions

import "context"

// Middleware is the signature of the function that needs to be implemented to use
// middleware functionnality
//
// Message sent to or received from is passed as an argument. If you modify it,
// it will be kept as a modification of the sent or received message.
//
// You can call the next middleware (by calling `next(ctx, msg)`) in the middleware
// code in order to wrap next code execution (for example, to time execution, or
// recover in case of panic).
type Middleware func(ctx context.Context, msg *BrokerMessage, next NextMiddleware) error

// NextMiddleware represents the next middleware that can be executed during the
// previous middleware. If this is already the last middleware, it will execute
// the appropriate autogenerated code for reception/sending of messages.
type NextMiddleware func(ctx context.Context) error
